"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1861],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var s=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},i=Object.keys(e);for(s=0;s<i.length;s++)n=i[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)n=i[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=s.createContext({}),u=function(e){var t=s.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return s.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?s.createElement(f,a(a({ref:t},p),{},{components:n})):s.createElement(f,a({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var u=2;u<i;u++)a[u]=n[u];return s.createElement.apply(null,a)}return s.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var s=n(7462),r=(n(7294),n(4137));const i={id:"issue-close-reason-input",title:"Issue close reason input",description:"The reason used when an issue is closed.\n",tags:["Issues","Inputs","Closing","V2"]},a=void 0,o={unversionedId:"issues/inputs/issue-close-reason-input",id:"issues/inputs/issue-close-reason-input",title:"Issue close reason input",description:"The reason used when an issue is closed.\n",source:"@site/docs/06-issues/01-inputs/71-close-reason-input.mdx",sourceDirName:"06-issues/01-inputs",slug:"/issues/inputs/issue-close-reason-input",permalink:"/stale/fr/docs/issues/inputs/issue-close-reason-input",draft:!1,editUrl:"https://github.com/Sonia-corporation/stale/tree/develop/documentation/docs/06-issues/01-inputs/71-close-reason-input.mdx",tags:[{label:"Issues",permalink:"/stale/fr/docs/tags/issues"},{label:"Inputs",permalink:"/stale/fr/docs/tags/inputs"},{label:"Closing",permalink:"/stale/fr/docs/tags/closing"},{label:"V2",permalink:"/stale/fr/docs/tags/v-2"}],version:"current",sidebarPosition:71,frontMatter:{id:"issue-close-reason-input",title:"Issue close reason input",description:"The reason used when an issue is closed.\n",tags:["Issues","Inputs","Closing","V2"]},sidebar:"tutorialSidebar",previous:{title:"Issue processing input",permalink:"/stale/fr/docs/issues/inputs/issue-processing-input"},next:{title:"Add issue labels after stale input",permalink:"/stale/fr/docs/issues/inputs/issue-add-labels-after-stale-input"}},l={},u=[{value:"Input",id:"input",level:3},{value:"Description",id:"description",level:3},{value:"Example",id:"example",level:3}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,s.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"input"},"Input"),(0,r.kt)("p",null,"Name: ",(0,r.kt)("inlineCode",{parentName:"p"},"issue-close-reason"),(0,r.kt)("br",{parentName:"p"}),"\n","Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"enum"),(0,r.kt)("br",{parentName:"p"}),"\n","Values: ",(0,r.kt)("inlineCode",{parentName:"p"},"completed")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"not planned"),(0,r.kt)("br",{parentName:"p"}),"\n","Default value: ",(0,r.kt)("inlineCode",{parentName:"p"},"not planned")),(0,r.kt)("h3",{id:"description"},"Description"),(0,r.kt)("p",null,"This input will let you define the closing reason used when an issue is closed during the processing."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can also add labels onto it by using the ",(0,r.kt)("a",{parentName:"p",href:"issue-add-labels-after-close-input"},"add labels after close input"),",\nremove labels onto it by using the ",(0,r.kt)("a",{parentName:"p",href:"issue-remove-labels-after-close-input"},"remove labels after close input"),",\nadd a comment to explain why it was closed by using the ",(0,r.kt)("a",{parentName:"p",href:"issue-close-comment-input"},"close comment input"),"\nand define the number of days before closing it by using the ",(0,r.kt)("a",{parentName:"p",href:"issue-days-before-close-input"},"days before close input"),".")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml",metastring:"{6}","{6}":!0},"# ...\nname: Stale\nid: stale\nuses: sonia-corporation/stale@latest\nwith:\n  issue-close-reason: 'not planned'\n")))}c.isMDXComponent=!0}}]);