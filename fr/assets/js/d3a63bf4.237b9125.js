"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7087],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a=i.createContext({}),p=function(e){var n=i.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=p(e.components);return i.createElement(a.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),d=p(t),f=r,m=d["".concat(a,".").concat(f)]||d[f]||c[f]||s;return t?i.createElement(m,o(o({ref:n},l),{},{components:t})):i.createElement(m,o({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=d;var u={};for(var a in n)hasOwnProperty.call(n,a)&&(u[a]=n[a]);u.originalType=e,u.mdxType="string"==typeof e?e:r,o[1]=u;for(var p=2;p<s;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7218:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return u},contentTitle:function(){return a},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var i=t(7462),r=t(3366),s=(t(7294),t(3905)),o=["components"],u={id:"issue-processing-input",title:"Issue processing input",description:"All the information you need to know about the issue processing input.\nIncluding a detailed description and an example.\n",tags:["Issues","Inputs"]},a=void 0,p={unversionedId:"issues/inputs/issue-processing-input",id:"issues/inputs/issue-processing-input",title:"Issue processing input",description:"All the information you need to know about the issue processing input.\nIncluding a detailed description and an example.\n",source:"@site/docs/06-issues/01-inputs/16-processing-input.mdx",sourceDirName:"06-issues/01-inputs",slug:"/issues/inputs/issue-processing-input",permalink:"/stale/fr/docs/issues/inputs/issue-processing-input",editUrl:"https://github.com/Sonia-corporation/stale/tree/develop/documentation/docs/06-issues/01-inputs/16-processing-input.mdx",tags:[{label:"Issues",permalink:"/stale/fr/docs/tags/issues"},{label:"Inputs",permalink:"/stale/fr/docs/tags/inputs"}],version:"current",sidebarPosition:16,frontMatter:{id:"issue-processing-input",title:"Issue processing input",description:"All the information you need to know about the issue processing input.\nIncluding a detailed description and an example.\n",tags:["Issues","Inputs"]},sidebar:"tutorialSidebar",previous:{title:"Add issue labels after close input",permalink:"/stale/fr/docs/issues/inputs/issue-add-labels-after-close-input"},next:{title:"Issue limit api queries count input",permalink:"/stale/fr/docs/issues/inputs/issue-limit-api-queries-count-input"}},l=[{value:"Input",id:"input",children:[],level:3},{value:"Description",id:"description",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],c={toc:l};function d(e){var n=e.components,t=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"input"},"Input"),(0,s.kt)("p",null,"Name: ",(0,s.kt)("inlineCode",{parentName:"p"},"issue-processing"),(0,s.kt)("br",{parentName:"p"}),"\n","Type: ",(0,s.kt)("inlineCode",{parentName:"p"},"boolean"),(0,s.kt)("br",{parentName:"p"}),"\n","Default value: ",(0,s.kt)("inlineCode",{parentName:"p"},"true")),(0,s.kt)("h3",{id:"description"},"Description"),(0,s.kt)("p",null,"This input will let you enable or disable the processing of all the issues.",(0,s.kt)("br",{parentName:"p"}),"\n","This can be useful only if you do not intend to use this action to process the issues to avoid calling the GitHub API and consuming your quotas for nothing."),(0,s.kt)("h3",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yml",metastring:"{6}","{6}":!0},"# ...\nname: Stale\nid: stale\nuses: sonia-corporation/stale@latest\nwith:\n  issue-processing: false\n")))}d.isMDXComponent=!0}}]);