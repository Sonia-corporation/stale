"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7672],{4137:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var s=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,s,i=function(e,t){if(null==e)return{};var n,s,i={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=s.createContext({}),p=function(e){var t=s.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return s.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,u=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||r;return n?s.createElement(f,o(o({ref:t},l),{},{components:n})):s.createElement(f,o({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var p=2;p<r;p++)o[p]=n[p];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3719:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>p});var s=n(7462),i=(n(7294),n(4137));const r={id:"issue-processing-input",title:"Issue processing input",description:"All the information you need to know about the issue processing input.\nIncluding a detailed description and an example.\n",tags:["Issues","Inputs"]},o=void 0,a={unversionedId:"issues/inputs/issue-processing-input",id:"issues/inputs/issue-processing-input",title:"Issue processing input",description:"All the information you need to know about the issue processing input.\nIncluding a detailed description and an example.\n",source:"@site/docs/06-issues/01-inputs/70-processing-input.mdx",sourceDirName:"06-issues/01-inputs",slug:"/issues/inputs/issue-processing-input",permalink:"/stale/fr/docs/issues/inputs/issue-processing-input",draft:!1,editUrl:"https://github.com/Sonia-corporation/stale/tree/develop/documentation/docs/06-issues/01-inputs/70-processing-input.mdx",tags:[{label:"Issues",permalink:"/stale/fr/docs/tags/issues"},{label:"Inputs",permalink:"/stale/fr/docs/tags/inputs"}],version:"current",sidebarPosition:70,frontMatter:{id:"issue-processing-input",title:"Issue processing input",description:"All the information you need to know about the issue processing input.\nIncluding a detailed description and an example.\n",tags:["Issues","Inputs"]},sidebar:"tutorialSidebar",previous:{title:"Ignore issue before creation date input",permalink:"/stale/fr/docs/issues/inputs/issue-ignore-before-creation-date-input"},next:{title:"Issue close reason input",permalink:"/stale/fr/docs/issues/inputs/issue-close-reason-input"}},u={},p=[{value:"Input",id:"input",level:3},{value:"Description",id:"description",level:3},{value:"Example",id:"example",level:3}],l={toc:p};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,s.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"input"},"Input"),(0,i.kt)("p",null,"Name: ",(0,i.kt)("inlineCode",{parentName:"p"},"issue-processing"),(0,i.kt)("br",{parentName:"p"}),"\n","Type: ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),(0,i.kt)("br",{parentName:"p"}),"\n","Default value: ",(0,i.kt)("inlineCode",{parentName:"p"},"true")),(0,i.kt)("h3",{id:"description"},"Description"),(0,i.kt)("p",null,"This input will let you enable or disable the processing of all the issues.",(0,i.kt)("br",{parentName:"p"}),"\n","This can be useful only if you do not intend to use this action to process the issues to avoid calling the GitHub API and consuming your quotas for nothing."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:"{6}","{6}":!0},"# ...\nname: Stale\nid: stale\nuses: sonia-corporation/stale@latest\nwith:\n  issue-processing: false\n")))}c.isMDXComponent=!0}}]);