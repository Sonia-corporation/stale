"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9358],{3905:function(e,t,s){s.d(t,{Zo:function(){return a},kt:function(){return m}});var n=s(7294);function r(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function u(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}function o(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?u(Object(s),!0).forEach((function(t){r(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):u(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function i(e,t){if(null==e)return{};var s,n,r=function(e,t){if(null==e)return{};var s,n,r={},u=Object.keys(e);for(n=0;n<u.length;n++)s=u[n],t.indexOf(s)>=0||(r[s]=e[s]);return r}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)s=u[n],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(r[s]=e[s])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),s=t;return e&&(s="function"==typeof e?e(t):o(o({},t),e)),s},a=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var s=e.components,r=e.mdxType,u=e.originalType,p=e.parentName,a=i(e,["components","mdxType","originalType","parentName"]),d=c(s),m=r,f=d["".concat(p,".").concat(m)]||d[m]||l[m]||u;return s?n.createElement(f,o(o({ref:t},a),{},{components:s})):n.createElement(f,o({ref:t},a))}));function m(e,t){var s=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var u=s.length,o=new Array(u);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<u;c++)o[c]=s[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,s)}d.displayName="MDXCreateElement"},3421:function(e,t,s){s.r(t),s.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return a},default:function(){return d}});var n=s(7462),r=s(3366),u=(s(7294),s(3905)),o=["components"],i={id:"processed-issues-count-output",title:"Processed issues count output",tags:["Issues","Outputs"]},p=void 0,c={unversionedId:"issues/outputs/processed-issues-count-output",id:"issues/outputs/processed-issues-count-output",title:"Processed issues count output",description:"Output",source:"@site/docs/06-issues/02-outputs/02-processed-issues-count-output.mdx",sourceDirName:"06-issues/02-outputs",slug:"/issues/outputs/processed-issues-count-output",permalink:"/stale/docs/issues/outputs/processed-issues-count-output",editUrl:"https://github.com/Sonia-corporation/stale/tree/develop/documentation/docs/06-issues/02-outputs/02-processed-issues-count-output.mdx",tags:[{label:"Issues",permalink:"/stale/docs/tags/issues"},{label:"Outputs",permalink:"/stale/docs/tags/outputs"}],version:"current",sidebarPosition:2,frontMatter:{id:"processed-issues-count-output",title:"Processed issues count output",tags:["Issues","Outputs"]},sidebar:"tutorialSidebar",previous:{title:"All issues outputs",permalink:"/stale/docs/issues/outputs/all-issues-outputs"},next:{title:"Ignored issues count output",permalink:"/stale/docs/issues/outputs/ignored-issues-count-output"}},a=[{value:"Output",id:"output",children:[],level:3},{value:"Description",id:"description",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],l={toc:a};function d(e){var t=e.components,s=(0,r.Z)(e,o);return(0,u.kt)("wrapper",(0,n.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h3",{id:"output"},"Output"),(0,u.kt)("p",null,"Name: ",(0,u.kt)("inlineCode",{parentName:"p"},"processed-issues-count"),(0,u.kt)("br",{parentName:"p"}),"\n","Type: ",(0,u.kt)("inlineCode",{parentName:"p"},"number")),(0,u.kt)("h3",{id:"description"},"Description"),(0,u.kt)("p",null,"This output will expose the number of issues processed."),(0,u.kt)("h3",{id:"example"},"Example"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-yml",metastring:"{6}","{6}":!0},'# ...\nsteps:\n  - name: Stale\n    id: stale\n    uses: sonia-corporation/stale@latest\n  - name: Count\n    run: echo "${{ steps.Stale.outputs.processed-issues-count }}"\n')))}d.isMDXComponent=!0}}]);