"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6911],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},u=Object.keys(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),s=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(a.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,u=e.originalType,a=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(n),d=i,f=m["".concat(a,".").concat(d)]||m[d]||c[d]||u;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var u=n.length,l=new Array(u);l[0]=m;var o={};for(var a in t)hasOwnProperty.call(t,a)&&(o[a]=t[a]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<u;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5971:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return a},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var r=n(7462),i=n(3366),u=(n(7294),n(3905)),l=["components"],o={id:"pull-request-limit-api-queries-count-input",title:"Pull request limit api queries count input",tags:["Pull requests","Inputs"]},a=void 0,s={unversionedId:"pull-requests/inputs/pull-request-limit-api-queries-count-input",id:"pull-requests/inputs/pull-request-limit-api-queries-count-input",title:"Pull request limit api queries count input",description:"Input",source:"@site/docs/08-pull-requests/01-inputs/20-limit-api-queries-count-input.mdx",sourceDirName:"08-pull-requests/01-inputs",slug:"/pull-requests/inputs/pull-request-limit-api-queries-count-input",permalink:"/stale/docs/pull-requests/inputs/pull-request-limit-api-queries-count-input",editUrl:"https://github.com/Sonia-corporation/stale/tree/develop/documentation/docs/08-pull-requests/01-inputs/20-limit-api-queries-count-input.mdx",tags:[{label:"Pull requests",permalink:"/stale/docs/tags/pull-requests"},{label:"Inputs",permalink:"/stale/docs/tags/inputs"}],version:"current",sidebarPosition:20,frontMatter:{id:"pull-request-limit-api-queries-count-input",title:"Pull request limit api queries count input",tags:["Pull requests","Inputs"]},sidebar:"tutorialSidebar",previous:{title:"Pull request to draft instead of stale input",permalink:"/stale/docs/pull-requests/inputs/pull-request-to-draft-instead-of-stale-input"},next:{title:"Pull request limit api mutations count input",permalink:"/stale/docs/pull-requests/inputs/pull-request-limit-api-mutations-count-input"}},p=[{value:"Input",id:"input",children:[],level:3},{value:"Description",id:"description",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],c={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,l);return(0,u.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h3",{id:"input"},"Input"),(0,u.kt)("p",null,"Name: ",(0,u.kt)("inlineCode",{parentName:"p"},"pull-request-limit-api-queries-count"),(0,u.kt)("br",{parentName:"p"}),"\n","Type: ",(0,u.kt)("inlineCode",{parentName:"p"},"number"),(0,u.kt)("br",{parentName:"p"}),"\n","Default value: ",(0,u.kt)("inlineCode",{parentName:"p"},"-1")),(0,u.kt)("h3",{id:"description"},"Description"),(0,u.kt)("p",null,"This input will let you define a limit count of pull requests API queries (read) calls performed during the processing.",(0,u.kt)("br",{parentName:"p"}),"\n","If the limit is reached, the ongoing processed pull request will finish it's processing then all other pull requests will be ignored.",(0,u.kt)("br",{parentName:"p"}),"\n","This can be useful when you want to play it safe with this action.",(0,u.kt)("br",{parentName:"p"}),"\n","This can be also very useful if you have a lot of pull requests to process, and you want to limit the quotas of your associated ",(0,u.kt)("a",{parentName:"p",href:"../../github-token-input"},"GitHub token"),"."),(0,u.kt)("h3",{id:"example"},"Example"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-yml",metastring:"{6}","{6}":!0},"# ...\nname: Stale\nid: stale\nuses: sonia-corporation/stale@latest\nwith:\n  pull-request-limit-api-queries-count: 100\n")))}m.isMDXComponent=!0}}]);