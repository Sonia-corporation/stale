"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8163],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,m=d["".concat(p,".").concat(f)]||d[f]||c[f]||l;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<l;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5769:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var n=r(7462),o=r(3366),l=(r(7294),r(3905)),a=["components"],i={id:"pull-request-ignore-all-project-cards-option",title:"Ignore all pull request project cards option",tags:["Pull requests","Options"]},p=void 0,s={unversionedId:"pull-requests/pull-request-ignore-all-project-cards-option",id:"pull-requests/pull-request-ignore-all-project-cards-option",title:"Ignore all pull request project cards option",description:"Input",source:"@site/docs/07-pull-requests/07-ignore-all-project-cards-option.mdx",sourceDirName:"07-pull-requests",slug:"/pull-requests/pull-request-ignore-all-project-cards-option",permalink:"/stale/docs/pull-requests/pull-request-ignore-all-project-cards-option",editUrl:"https://github.com/Sonia-corporation/stale/tree/develop/documentation/docs/07-pull-requests/07-ignore-all-project-cards-option.mdx",tags:[{label:"Pull requests",permalink:"/stale/docs/tags/pull-requests"},{label:"Options",permalink:"/stale/docs/tags/options"}],version:"current",sidebarPosition:7,frontMatter:{id:"pull-request-ignore-all-project-cards-option",title:"Ignore all pull request project cards option",tags:["Pull requests","Options"]},sidebar:"tutorialSidebar",previous:{title:"Ignore any pull request assignees option",permalink:"/stale/docs/pull-requests/pull-request-ignore-any-assignees-option"},next:{title:"Ignore any pull request project cards option",permalink:"/stale/docs/pull-requests/pull-request-ignore-any-project-cards-option"}},u=[{value:"Input",id:"input",children:[],level:3},{value:"Description",id:"description",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],c={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"input"},"Input"),(0,l.kt)("p",null,"Name: ",(0,l.kt)("inlineCode",{parentName:"p"},"pull-request-ignore-all-project-cards"),(0,l.kt)("br",{parentName:"p"}),"\n","Type: ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),(0,l.kt)("br",{parentName:"p"}),"\n","Default value: ",(0,l.kt)("inlineCode",{parentName:"p"},"false")),(0,l.kt)("h3",{id:"description"},"Description"),(0,l.kt)("p",null,"This option will let you ignore the processing of the pull requests which have at least one project card.",(0,l.kt)("br",{parentName:"p"}),"\n","This can be useful when you link your pull requests with your projects, and you know that you will for sure close or at least process the pull requests very soon."),(0,l.kt)("p",null,"However, if you are not certain that linking the pull requests with any project will result in the handling for sure of the processing of the pull requests, this option may not suit you.",(0,l.kt)("br",{parentName:"p"}),"\n","You may prefer to use instead the ",(0,l.kt)("a",{parentName:"p",href:"pull-request-ignore-any-project-cards-option"},"ignore any project cards option")," to list only some specific project cards or not use this option at all."),(0,l.kt)("h3",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml",metastring:"{6}","{6}":!0},"# ...\nname: Stale\nid: stale\nuses: sonia-corporation/stale@latest\nwith:\n  pull-request-ignore-all-project-cards: true\n")))}d.isMDXComponent=!0}}]);