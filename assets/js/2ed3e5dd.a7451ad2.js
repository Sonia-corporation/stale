"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5471],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?u(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},u=Object.keys(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,u=e.originalType,i=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=p(r),f=l,m=d["".concat(i,".").concat(f)]||d[f]||c[f]||u;return r?n.createElement(m,o(o({ref:t},s),{},{components:r})):n.createElement(m,o({ref:t},s))}));function f(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var u=r.length,o=new Array(u);o[0]=d;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:l,o[1]=a;for(var p=2;p<u;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1425:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var n=r(7462),l=r(3366),u=(r(7294),r(3905)),o=["components"],a={id:"pull-request-ignore-all-project-cards-input",title:"Ignore all pull request project cards input",tags:["Pull requests","Inputs"]},i=void 0,p={unversionedId:"pull-requests/inputs/pull-request-ignore-all-project-cards-input",id:"pull-requests/inputs/pull-request-ignore-all-project-cards-input",title:"Ignore all pull request project cards input",description:"Input",source:"@site/docs/08-pull-requests/01-inputs/07-ignore-all-project-cards-input.mdx",sourceDirName:"08-pull-requests/01-inputs",slug:"/pull-requests/inputs/pull-request-ignore-all-project-cards-input",permalink:"/stale/docs/pull-requests/inputs/pull-request-ignore-all-project-cards-input",editUrl:"https://github.com/Sonia-corporation/stale/tree/develop/documentation/docs/08-pull-requests/01-inputs/07-ignore-all-project-cards-input.mdx",tags:[{label:"Pull requests",permalink:"/stale/docs/tags/pull-requests"},{label:"Inputs",permalink:"/stale/docs/tags/inputs"}],version:"current",sidebarPosition:7,frontMatter:{id:"pull-request-ignore-all-project-cards-input",title:"Ignore all pull request project cards input",tags:["Pull requests","Inputs"]},sidebar:"tutorialSidebar",previous:{title:"Ignore any pull request assignees input",permalink:"/stale/docs/pull-requests/inputs/pull-request-ignore-any-assignees-input"},next:{title:"Ignore any pull request project cards input",permalink:"/stale/docs/pull-requests/inputs/pull-request-ignore-any-project-cards-input"}},s=[{value:"Input",id:"input",children:[],level:3},{value:"Description",id:"description",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],c={toc:s};function d(e){var t=e.components,r=(0,l.Z)(e,o);return(0,u.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h3",{id:"input"},"Input"),(0,u.kt)("p",null,"Name: ",(0,u.kt)("inlineCode",{parentName:"p"},"pull-request-ignore-all-project-cards"),(0,u.kt)("br",{parentName:"p"}),"\n","Type: ",(0,u.kt)("inlineCode",{parentName:"p"},"boolean"),(0,u.kt)("br",{parentName:"p"}),"\n","Default value: ",(0,u.kt)("inlineCode",{parentName:"p"},"false")),(0,u.kt)("h3",{id:"description"},"Description"),(0,u.kt)("p",null,"This input will let you ignore the processing of the pull requests which have at least one project card.",(0,u.kt)("br",{parentName:"p"}),"\n","This can be useful when you link your pull requests with your projects, and you know that you will for sure close or at least process the pull requests very soon."),(0,u.kt)("p",null,"However, if you are not certain that linking the pull requests with any project will result in the handling for sure of the processing of the pull requests, this input may not suit you.",(0,u.kt)("br",{parentName:"p"}),"\n","You may prefer to use instead the ",(0,u.kt)("a",{parentName:"p",href:"pull-request-ignore-any-project-cards-input"},"ignore any project cards input")," to list only some specific project cards or not use this input at all."),(0,u.kt)("h3",{id:"example"},"Example"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-yml",metastring:"{6}","{6}":!0},"# ...\nname: Stale\nid: stale\nuses: sonia-corporation/stale@latest\nwith:\n  pull-request-ignore-all-project-cards: true\n")))}d.isMDXComponent=!0}}]);