"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2586],{3905:function(e,t,r){r.d(t,{Zo:function(){return a},kt:function(){return m}});var u=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);t&&(u=u.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,u)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,u,n=function(e,t){if(null==e)return{};var r,u,n={},o=Object.keys(e);for(u=0;u<o.length;u++)r=o[u],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(u=0;u<o.length;u++)r=o[u],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=u.createContext({}),c=function(e){var t=u.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},a=function(e){var t=c(e.components);return u.createElement(p.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return u.createElement(u.Fragment,{},t)}},d=u.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,a=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=n,f=d["".concat(p,".").concat(m)]||d[m]||i[m]||o;return r?u.createElement(f,s(s({ref:t},a),{},{components:r})):u.createElement(f,s({ref:t},a))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,s[1]=l;for(var c=2;c<o;c++)s[c]=r[c];return u.createElement.apply(null,s)}return u.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7431:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return a},default:function(){return d}});var u=r(7462),n=r(3366),o=(r(7294),r(3905)),s=["components"],l={id:"processed-pull-requests-count-output",title:"Processed pull requests count output",tags:["Pull requests","Outputs"]},p=void 0,c={unversionedId:"pull-requests/outputs/processed-pull-requests-count-output",id:"pull-requests/outputs/processed-pull-requests-count-output",title:"Processed pull requests count output",description:"Output",source:"@site/docs/08-pull-requests/02-outputs/02-processed-pull-requests-count-output.mdx",sourceDirName:"08-pull-requests/02-outputs",slug:"/pull-requests/outputs/processed-pull-requests-count-output",permalink:"/stale/docs/pull-requests/outputs/processed-pull-requests-count-output",editUrl:"https://github.com/Sonia-corporation/stale/tree/develop/documentation/docs/08-pull-requests/02-outputs/02-processed-pull-requests-count-output.mdx",tags:[{label:"Pull requests",permalink:"/stale/docs/tags/pull-requests"},{label:"Outputs",permalink:"/stale/docs/tags/outputs"}],version:"current",sidebarPosition:2,frontMatter:{id:"processed-pull-requests-count-output",title:"Processed pull requests count output",tags:["Pull requests","Outputs"]},sidebar:"tutorialSidebar",previous:{title:"All pull requests outputs",permalink:"/stale/docs/pull-requests/outputs/all-pull-requests-outputs"},next:{title:"Ignored pull requests count output",permalink:"/stale/docs/pull-requests/outputs/ignored-pull-requests-count-output"}},a=[{value:"Output",id:"output",children:[],level:3},{value:"Description",id:"description",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],i={toc:a};function d(e){var t=e.components,r=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,u.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"output"},"Output"),(0,o.kt)("p",null,"Name: ",(0,o.kt)("inlineCode",{parentName:"p"},"processed-pull-requests-count"),(0,o.kt)("br",{parentName:"p"}),"\n","Type: ",(0,o.kt)("inlineCode",{parentName:"p"},"number")),(0,o.kt)("h3",{id:"description"},"Description"),(0,o.kt)("p",null,"This output will expose the number of pull requests processed."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml",metastring:"{6}","{6}":!0},'# ...\nsteps:\n  - name: Stale\n    id: stale\n    uses: sonia-corporation/stale@latest\n  - name: Count\n    run: echo "${{ steps.Stale.outputs.processed-pull-requests-count }}"\n')))}d.isMDXComponent=!0}}]);