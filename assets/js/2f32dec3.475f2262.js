"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3130],{3905:function(e,t,n){n.d(t,{Zo:function(){return a},kt:function(){return f}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},u=Object.keys(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=r.createContext({}),p=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},a=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,u=e.originalType,o=e.parentName,a=i(e,["components","mdxType","originalType","parentName"]),d=p(n),f=l,m=d["".concat(o,".").concat(f)]||d[f]||c[f]||u;return n?r.createElement(m,s(s({ref:t},a),{},{components:n})):r.createElement(m,s({ref:t},a))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var u=n.length,s=new Array(u);s[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:l,s[1]=i;for(var p=2;p<u;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3555:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return a},default:function(){return d}});var r=n(7462),l=n(3366),u=(n(7294),n(3905)),s=["components"],i={id:"pull-request-processing-input",title:"Pull request processing input",tags:["Pull requests","Inputs"]},o=void 0,p={unversionedId:"pull-requests/inputs/pull-request-processing-input",id:"pull-requests/inputs/pull-request-processing-input",title:"Pull request processing input",description:"Input",source:"@site/docs/08-pull-requests/01-inputs/18-processing-input.mdx",sourceDirName:"08-pull-requests/01-inputs",slug:"/pull-requests/inputs/pull-request-processing-input",permalink:"/stale/docs/pull-requests/inputs/pull-request-processing-input",editUrl:"https://github.com/Sonia-corporation/stale/tree/develop/documentation/docs/08-pull-requests/01-inputs/18-processing-input.mdx",tags:[{label:"Pull requests",permalink:"/stale/docs/tags/pull-requests"},{label:"Inputs",permalink:"/stale/docs/tags/inputs"}],version:"current",sidebarPosition:18,frontMatter:{id:"pull-request-processing-input",title:"Pull request processing input",tags:["Pull requests","Inputs"]},sidebar:"tutorialSidebar",previous:{title:"Add pull request labels after close input",permalink:"/stale/docs/pull-requests/inputs/pull-request-add-labels-after-close-input"},next:{title:"Pull request to draft instead of stale input",permalink:"/stale/docs/pull-requests/inputs/pull-request-to-draft-instead-of-stale-input"}},a=[{value:"Input",id:"input",children:[],level:3},{value:"Description",id:"description",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],c={toc:a};function d(e){var t=e.components,n=(0,l.Z)(e,s);return(0,u.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h3",{id:"input"},"Input"),(0,u.kt)("p",null,"Name: ",(0,u.kt)("inlineCode",{parentName:"p"},"pull-request-processing"),(0,u.kt)("br",{parentName:"p"}),"\n","Type: ",(0,u.kt)("inlineCode",{parentName:"p"},"boolean"),(0,u.kt)("br",{parentName:"p"}),"\n","Default value: ",(0,u.kt)("inlineCode",{parentName:"p"},"true")),(0,u.kt)("h3",{id:"description"},"Description"),(0,u.kt)("p",null,"This input will let you enable or disable the processing of all the pull requests.",(0,u.kt)("br",{parentName:"p"}),"\n","This can be useful only if you do not intend to use this action to process the pull requests to avoid calling the GitHub API and consuming your quotas for nothing."),(0,u.kt)("h3",{id:"example"},"Example"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-yml",metastring:"{6}","{6}":!0},"# ...\nname: Stale\nid: stale\nuses: sonia-corporation/stale@latest\nwith:\n  pull-request-processing: false\n")))}d.isMDXComponent=!0}}]);