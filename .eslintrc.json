{
  "root": true,
  "env": {
    "es6": true,
    "node": true,
    "jest/globals": true
  },
  "extends": [
    "eslint:recommended",
    "google",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:jsdoc/recommended",
    "plugin:prettier/recommended",
    "plugin:typescript-sort-keys/recommended"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly",
    "createInstance": "readonly"
  },
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": ["tsconfig.*?.json", "documentation/tsconfig.json"]
  },
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "typescript-sort-keys", "jest", "prettier", "progress", "jsdoc", "import", "typescript-sort-keys"],
  "settings": {
    "import/extensions": [".js", ".ts", ".tsx", ".mjs"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts"]
    },
    "import/cache": {
      "lifetime": "Infinity"
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": ["./tsconfig.app.json", "./tsconfig.spec.json", "./documentation/tsconfig.json"]
      }
    }
  },
  "rules": {
    "@typescript-eslint/no-inferrable-types": "off",
    "no-restricted-imports": ["error"],
    "progress/activate": 1,
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "signature",
          "public-static-field",
          "protected-static-field",
          "private-static-field",
          "public-static-method",
          "protected-static-method",
          "private-static-method",
          "public-abstract-field",
          "protected-abstract-field",
          "abstract-field",
          "public-instance-field",
          "protected-instance-field",
          "private-instance-field",
          "public-constructor",
          "protected-constructor",
          "private-constructor",
          "public-instance-method",
          "protected-instance-method",
          "private-instance-method",
          "public-abstract-method",
          "protected-abstract-method",
          "abstract-method"
        ]
      }
    ],
    "typescript-sort-keys/interface": [
      "error",
      "asc",
      {
        "caseSensitive": true,
        "natural": true
      }
    ],
    "typescript-sort-keys/string-enum": [
      "error",
      "asc",
      {
        "caseSensitive": true,
        "natural": true
      }
    ],
    "quotes": "off",
    "no-else-return": [
      "error",
      {
        "allowElseIf": true
      }
    ],
    "sort-keys": [
      "error",
      "asc",
      {
        "caseSensitive": true,
        "natural": true,
        "minKeys": 2
      }
    ],
    "@typescript-eslint/quotes": ["error", "backtick"],
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "import/no-namespace": "off",
    "import/first": "error",
    "import/exports-last": "error",
    "import/no-duplicates": "error",
    "import/no-commonjs": "error",
    "import/no-dynamic-require": "error",
    "import/order": [
      "error",
      {
        "groups": ["index", "sibling", "parent", "internal", "external", "builtin", "object"],
        "newlines-between": "never",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": false
        }
      }
    ],
    "indent": "off",
    "no-duplicate-imports": "error",
    "sort-imports": "off",
    "new-cap": [
      "error",
      {
        "capIsNewExceptions": ["StoreConfig"]
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"]
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase", "UPPER_CASE"],
        "prefix": ["is", "has", "should", "contains", "as", "to"]
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "parameter",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "leadingUnderscore": "allow",
        "prefix": ["is", "has", "should", "contains", "as", "to"]
      },
      {
        "selector": "function",
        "format": ["camelCase"]
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "require"
      },
      {
        "selector": "memberLike",
        "modifiers": ["protected"],
        "format": ["camelCase"],
        "leadingUnderscore": "require"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "typeParameter",
        "format": ["PascalCase"],
        "prefix": ["T"]
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "prefix": ["I"]
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"],
        "prefix": ["I"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      },
      {
        "selector": "enum",
        "format": ["PascalCase"],
        "prefix": ["E"]
      },
      {
        "selector": "objectLiteralMethod",
        "format": ["camelCase", "UPPER_CASE"]
      }
    ],
    "@typescript-eslint/no-explicit-any": [
      "error",
      {
        "fixToUnknown": false,
        "ignoreRestArgs": false
      }
    ],
    "object-curly-spacing": ["error", "always"],
    "linebreak-style": "off",
    "computed-property-spacing": ["error", "never"],
    "array-bracket-spacing": "off",
    "prefer-rest-params": "off",
    "require-jsdoc": "off",
    "max-len": "off",
    "comma-dangle": "off",
    "object-shorthand": [
      "error",
      "always",
      {
        "avoidExplicitReturnArrows": true
      }
    ],
    "arrow-body-style": [
      "error",
      "as-needed",
      {
        "requireReturnForObjectLiteral": true
      }
    ],
    "no-dupe-else-if": "error",
    "no-unmodified-loop-condition": "error",
    "no-eval": "error",
    "no-extra-label": "error",
    "no-await-in-loop": "error",
    "prefer-destructuring": [
      "error",
      {
        "VariableDeclarator": {
          "array": true,
          "object": true
        },
        "AssignmentExpression": {
          "array": true,
          "object": true
        }
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/prefer-enum-initializers": "error",
    "@typescript-eslint/prefer-literal-enum-member": "off",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "no-undef-init": "error",
    "no-magic-numbers": [
      "error",
      {
        "enforceConst": true,
        "detectObjects": false,
        "ignore": [0, 1]
      }
    ],
    "prettier/prettier": [
      "error",
      {
        "printWidth": 120,
        "useTabs": false,
        "semi": true,
        "singleQuote": true,
        "quoteProps": "consistent",
        "trailingComma": "es5",
        "bracketSpacing": true,
        "arrowParens": "always",
        "endOfLine": "auto",
        "tabWidth": 2
      }
    ],
    "import/no-unresolved": "error",
    "prefer-template": "error",
    "no-useless-concat": "error",
    "no-constant-condition": [
      "error",
      {
        "checkLoops": true
      }
    ],
    "prefer-promise-reject-errors": [
      "error",
      {
        "allowEmptyReject": false
      }
    ],
    "no-case-declarations": "error",
    "no-irregular-whitespace": [
      "error",
      {
        "skipStrings": false,
        "skipComments": false,
        "skipRegExps": false,
        "skipTemplates": false
      }
    ],
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksConditionals": true,
        "checksVoidReturn": true
      }
    ],
    "no-invalid-this": "off",
    "@typescript-eslint/no-invalid-this": "error",
    "prefer-const": [
      "error",
      {
        "destructuring": "any",
        "ignoreReadBeforeAssign": false
      }
    ],
    "camelcase": "off",
    "valid-jsdoc": "off",
    "jsdoc/require-jsdoc": "error",
    "jsdoc/require-param-description": "error",
    "jsdoc/require-returns-description": "error",
    "jsdoc/no-undefined-types": [
      "error",
      {
        "definedTypes": ["unknown"]
      }
    ],
    "jsdoc/require-param-type": "error",
    "jsdoc/require-returns-type": "error",
    "curly": ["error", "all"],
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/triple-slash-reference": [
      "error",
      {
        "path": "never",
        "types": "never",
        "lib": "never"
      }
    ],
    "@typescript-eslint/prefer-readonly-parameter-types": [
      "warn",
      {
        "ignoreInferredTypes": true,
        "checkParameterProperties": false
      }
    ],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": false
      }
    ],
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/ban-types": "error",
    "@typescript-eslint/restrict-plus-operands": [
      "error",
      {
        "checkCompoundAssignments": true
      }
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
      {
        "ignoreVoid": true
      }
    ],
    "no-undef": [
      "error",
      {
        "typeof": true
      }
    ],
    "no-useless-escape": "error",
    "no-prototype-builtins": "error",
    "require-await": "off",
    "@typescript-eslint/require-await": "error",
    "no-empty-function": "off",
    "no-var": "error",
    "spaced-comment": [
      "error",
      "always",
      {
        "markers": ["/"]
      }
    ],
    "@typescript-eslint/no-empty-function": [
      "error",
      {
        "allow": ["decoratedFunctions"]
      }
    ],
    "padding-line-between-statements": "off",
    "@typescript-eslint/padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": ["*"],
        "next": ["class", "do", "for", "if", "return", "switch", "try", "function", "interface", "type", "export"]
      },
      {
        "blankLine": "always",
        "prev": ["block-like", "const", "let", "var"],
        "next": "*"
      },
      {
        "blankLine": "never",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      }
    ],
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": "error"
  },
  "overrides": [
    {
      "files": ["*.js", "*.mjs"],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "import/no-commonjs": "off"
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": false,
            "allowTypedFunctionExpressions": false,
            "allowHigherOrderFunctions": false
          }
        ],
        "@typescript-eslint/no-var-requires": "error"
      }
    },
    {
      "files": ["*.spec.ts", "*.spec.tsx"],
      "extends": ["plugin:jest/style", "plugin:jest/all"],
      "rules": {
        "jest/max-expects": "off",
        "jest/prefer-hooks-on-top": "error",
        "jest/prefer-comparison-matcher": "error",
        "jest/prefer-equality-matcher": "error",
        "jest/max-nested-describe": "off",
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        "jest/prefer-expect-resolves": "error",
        "jest/prefer-to-be": "error",
        "jest/require-top-level-describe": "error",
        "jest/valid-expect-in-promise": "error",
        "jest/require-hook": "error",
        "jest/no-done-callback": "error",
        "jest/no-disabled-tests": "warn",
        "jest/prefer-lowercase-title": [
          "error",
          {
            "ignoreTopLevelDescribe": true
          }
        ],
        "jest/no-hooks": [
          "error",
          {
            "allow": ["beforeAll", "beforeEach", "afterAll", "afterEach"]
          }
        ],
        "no-magic-numbers": "off",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "Readonly": {
                "message": "Sonia rule - This is useless inside the tests"
              }
            },
            "extendDefaults": true
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"]
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "variable",
            "types": ["boolean"],
            "format": ["camelCase", "UPPER_CASE"]
          },
          {
            "selector": "parameter",
            "format": ["camelCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "parameter",
            "types": ["boolean"],
            "format": ["camelCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "function",
            "format": ["camelCase"]
          },
          {
            "selector": "memberLike",
            "modifiers": ["private"],
            "format": ["camelCase"],
            "leadingUnderscore": "require"
          },
          {
            "selector": "memberLike",
            "modifiers": ["protected"],
            "format": ["camelCase"],
            "leadingUnderscore": "require"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "typeParameter",
            "format": ["PascalCase"],
            "prefix": ["T"]
          },
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "prefix": ["I"]
          },
          {
            "selector": "typeAlias",
            "format": ["PascalCase"],
            "prefix": ["I"]
          },
          {
            "selector": "enumMember",
            "format": ["UPPER_CASE"]
          },
          {
            "selector": "enum",
            "format": ["PascalCase"],
            "prefix": ["E"]
          }
        ],
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/unbound-method": "off",
        "jest/unbound-method": "error",
        "padding-line-between-statements": "off",
        "@typescript-eslint/padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "prev": ["*"],
            "next": ["class", "do", "for", "if", "return", "switch", "try", "function", "interface", "type", "export"]
          },
          {
            "blankLine": "always",
            "prev": ["block-like"],
            "next": "*"
          }
        ],
        "rxjs/no-ignored-subscription": "off"
      }
    }
  ]
}
